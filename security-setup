#!/bin/bash
#==============================================================================
#
#          FILE:  login-alert
#
#         USAGE: 
#
#   DESCRIPTION: This script is used to send login alert to admin
#
#        AUTHOR:  Team LocalHost
#       VERSION:  1.0
#       CREATED:  23/03/2019 10:12:08 AM IST
#===============================================================================

if [ "$EUID" -ne 0 ]; then 
  echo "Please run as sudo user"
  exit 1
fi

login_alert="/scripts/login-alert.sh"
failed_login_alert="/scripts/failed-login-alert.sh"
heroku_url="https://for2-accessdenied.herokuapp.com/v1alpha1/graphql"

user=$(whoami)
YELLOW='\033[0;33m'
LIGHT_RED='\033[1;31m'
CYAN='\033[0;36m'

directory_check() {
  if [[ ! -d "$1" ]]; then
    echo -e "${LIGHT_RED}File: $1 does not exist. Please get a complete copy of setup"
  fi
}

directory_check login_alert
directory_check failed_login_alert
#directory_check ## 1st wale kai liye

#Checking if the required curl package is installed or not.
if [ $(dpkg-query -W -f='${Status}' curl 2>/dev/null | grep -c "ok installed") -eq 0 ];
then
    apt-get install curl -y;
fi

#Checking if the required ssmtp package is installed or not.
if [ $(dpkg-query -W -f='${Status}' ssmtp 2>/dev/null | grep -c "ok installed") -eq 0 ];
then
    apt-get install ssmtp -y;
fi

#Checking if the required mailutils package is installed or not.
if [ $(dpkg-query -W -f='${Status}' mailutils 2>/dev/null | grep -c "ok installed") -eq 0 ];
then
    apt-get install mailutils -y;
fi

## Setup the files to give Admin notification for each user login.

sed -i "s/heroku_url=/heroku_url=$heroku_url/g" $login_alert
cp $login_alert /etc/profile.d/
chown "$user":"$user" /etc/profile.d/login-alert
chmod a+x /etc/profile.d/login-alert

##THIRD One

pam_com_auth="/etc/pam.d/common-auth"

success_count=($(grep 'success=' $pam_com_auth | cut -d '=' -f 2 | awk '{print $1}'))
for(( c=0 ; c<${#success_count[@]} ; c++ ))
do
    temp=${success_count[$c]}
    sudo sed -i "s/success=$temp/success=$((temp+1))/g" $pam_com_auth
done
if ! grep -q '/usr/bin/failed-login-alert' $pam_com_auth; then
   sed -i '/pam_deny.so/i auth [default=ignore] pam_exec.so seteuid /usr/bin/failed-login-alert' $pam_com_auth
fi

cp $failed_login_alert /usr/bin/failed-login-alert
chown "$user":"$user" /usr/bin/failed-login-alert
chmod a+x /usr/bin/failed-login-alert